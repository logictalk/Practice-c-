    int widthOfBinaryTree(TreeNode* root) {
        queue<pair<TreeNode*,int>> q;
        q.push(make_pair(root,0));
        int m=0;
        while(q.size()!=0)
        {
            int size=q.size();
            long long l=q.front().second;
            long long r=q.front().second;
            while(size>0)
            {
                pair<TreeNode*,int>front=q.front();
                q.pop();
                r=front.second;
                int x=front.second;
                if(front.first->left)
                    q.push(make_pair(front.first->left , 2*r-2*l));
                if(front.first->right)
                    q.push(make_pair(front.first->right , 2*r-2*l+1));
                size--;
            }
            if(m < (r-l+1))
                m=(r-l+1);
            //m=max(m, r-l+1);
        }
        return m;
    }
